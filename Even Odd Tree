class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {

       vector<vector<int>>level;
       queue<TreeNode*>q;
       q.push(root);

       int cnt = -1;

       while(!q.empty())
       {
           
           int n = q.size();
           vector<int>v;
           cnt++;
           for(int i = 0;i<n;++i)
           {
               auto temp = q.front();
               int val = temp->val;
               q.pop();
               

               if(temp->left!=NULL) q.push(temp->left);
               if(temp->right!=NULL) q.push(temp->right);
             

               if(cnt%2==0)
               {
                  if(val%2==0) return false;
                  else v.push_back(val);
               }
               else if(cnt%2 != 0)
               {
                  if(val%2!=0) return false;
                  else v.push_back(val);
               }
              
           }

        
           if(cnt%2==0 && cnt>0)
           {
              for(int  i = 1; i<v.size();++i)
              {
                 if(v[i-1] >= v[i]) return false; 
              }
           }
           else if(cnt%2!=0 && cnt>0)
           {
              for(int  i = 1; i<v.size();++i)
              {
                 if(v[i-1] <= v[i]) return false; 
              }
           }
       }

       return true; 
    }
};
